package com.bjxxkjdx.job_analysis.utils;

import com.hankcs.hanlp.HanLP;
import com.huaban.analysis.jieba.JiebaSegmenter;

import java.io.*;
import java.util.*;

/**
 * @author ChenXing
 * @date 2021/1/25 下午8:18
 */
public class test {
    public static void main(String[] args) {


//        ArrayList<String> arrayList = new ArrayList<>();
//        try {
//            File file = new File("place.txt");
//            InputStreamReader inputReader = new InputStreamReader(new FileInputStream(file));
//            BufferedReader bf = new BufferedReader(inputReader);
//            // 按行读取字符串
//            String str;
//            while ((str = bf.readLine()) != null) {
//                arrayList.add(str);
//            }
//            bf.close();
//            inputReader.close();
//        } catch (IOException e) {
//            e.printStackTrace();
//        }
//        for (String a:arrayList)
//            System.out.println(a);
//        System.out.println("+++++++++++++++++++++++++++++++++++++");
//        Set<String> middleHashSet = new HashSet<>(arrayList);
//        List<String> afterHashSetList = new ArrayList<>(middleHashSet);
//        for (String a:afterHashSetList)
//            System.out.println(a);

//        String[] contents = {"计算机网络、数据库（SqlServer）、软件工程导论、linux、c语言、数据结构等，在软件工程导论这门课中了解了一些有关软件测试的基础理论知识和测试流程",
//                "Python",
//                "计算机应用基础、计算机组装与维护、Flash动画制作、3Dmax图形图像处理。",
//                "Visual Basic语言 、大数据系统设计、计算机体系结构、并行编程。掌握大数据应用知识，能熟练使用HTML5,CSS3,JavaScript等编译软件，熟悉各种前端调试工具，优秀毕业生，熟悉使用office办公软件，尤其擅长PPT制作。",
//                "c语言、数据结构、软件工程、c++、嵌入式、oracle、javaweb、计算机组成原理等课程熟练掌握办公软件。熟悉数据库，有过oracle和mysql的编程经历。简单了解python",
//                "程序设计基础（C语言）、数据结构 Java、面向对象技术（JAVA）、web应用系统实践、",
//                "Linux 操作系统实践、大数据技术实践、CPU设计等 计算机体系结构，编译原理，，计算机网络，移动应用开发，数据库原理与应用，软件工程，汇编语言与微机接口技术，离散数学计算机电路基础等了解Java，c.c++编程语言；了解数据库 MySQL，SQLserver，oracle；了解Android开发、网页开发的基本操作。",
//                "专业课程：数据库，C语言，离散数学，算法设计与分析，数据结构，计算机组成原理，计算机网络，编译原理，并行计算等。",
//                "营销管理导论、经济法、微观经济学、管理学、线性代数A、概率论与数理统计、离散数学、程序设计基础（C语言）、面向对象技术（C++）、JAVA程序设计、人工智能、python、大数据平台技术实践、深度学习、数据采集、云计算导论、数据库原理与应用、计算机网络",
//                "Python，BI，Word（熟练），Excel（熟练），PowerPoint（可设计模板），Android	Studio（简单可视化界面开发），PS，秀米，PR",
//                "java程序设计实践、java 面向对象技术、数据结构、linux系统实践、计算机网络、操作系统、计算机组成原理、数据库原理、oracle库、算法设计、CPU设计、web应用开发、汇编语言与微机接口技术、移动应用开发、软件工程、编译原理、嵌入式、计算机体系结构、信息安全、大学英语、高等数学等相关课程。",
//                "熟悉Windows、Linux操作系统，具有系统管理与维护经验;熟悉各种办公软件(MicrosoftOffice、WPS等）;能用sqlsever 进行小型数据库编程;能使用Eclipse、DEV C++编写程序，学过HTML、JAVA、JSP、CSS 等网站开发语言。能熟练地配置软件环境以及系统的重装。",
//                "熟练掌握Java、C#、SQL、JavaScript等语言；",
//                "掌握并熟练使用 eclipse、myeclipse、vc0、SQL sever、My Sql、Android studio等工具；",
//                "了解 mysql 数据库，精通Jprofile等性能调优工具、loadruner等性能测试工具；",
//                "了解 J2EE 相关开发技术，包括：Java、DB2、SSH开发框架、SOA思想、ETL工具等；  主修课程：计算机组成原理、数据结构、Visual Basic语言，计算机网络、操作系统。 大学英语六级，办公软件熟练，PS 使用熟练，精通 python，C++，C，Linux 工作网络安全、经历VB、计算机可视化编程、android、JAVA WEB、计算机体系结构、微机原理、嵌入式高等数学、数据结构、离散数学、计算机组成原理、数据库原理、微机原理与汇编语言、软件工程、操作系统、Java语言程序设计、编译原理等 IELTS:0 VFP 计算机二级证 熟悉C语音，JAVA等编程语言 熟悉office 等办公软件 英語四六級证书 程序设计基础（C语言）、数据结构 Java、面向对象技术（JAVA）、web应用系统实践、",
//                " Linux 操作系统实践、计算机体系结构、编译原理、计算机网络等数据结构、算法设计、计算机网络、操作系统、计算机组成原理、数据库设计、计算机体系结构、软件工程师职业道德与素养、软件工程、嵌入式系统设计、C语言程序设计、C++程序设计、Java 程序设计、Python程序设计 大学英语四、六级| 接受过系统的乐理训练 | 熟悉网络前端体系架构的搭建、开发和部署。",
//                "数据结构,计算机组成原理,计算机电路基础,计算机网络, 操作系统, 微机原理与接口技术,编译原理,信息安全, 现代密码学,计算机视觉,C/C++, MySQL/Oracle",
//                "熟练掌握C语言、C++和Java；熟练使用各种 IDE，如VC、Eclipse；熟练使用Ps 和 Pr 进行图片和视频处理；精通 AutoCAD 相关图纸绘制功能数据结构，计算机组成原理，操作系统，编译原理，计算机网络，计算机体系结构等课程。各类公文写作",
//                "新闻写作和新闻摄影",
//                "Photoshop 图片编辑 ",
//                "office办公软件",
//                "Java、SQL、Word、Excel、Python、Eclipse、Visio、C/C++",
//                "移动应用开发 操作系统 算法设计与分析 软件工程 数据库 C语言 数据结构 计算机组成原理 计算机网络",
//                " 熟练使用数据库，如sqlserver、mysql、oracle,掌握数据库原理 深入理解数据结构，并能够用Java实现哈希表、链表、队列、栈、二叉树等数据结构 熟练使用Java、较熟悉linux 能够熟练使用HTML、javascript开发前端页面，并能够开发javaweb系统,Oracle数据库、WEB应用系统实践、移动应用系统，面向对象技术（JAVA）、数据结构(JAVA)、",
//                "Linux系统实践、现代密码学、信息安全等。计算机体系结构、操作系统、数据结构、离散数学等课。大学英语四级，熟悉C、C++等语言，能够使用Java、Python等程序语言，能够掌握数据库的搭建与使用。高等数学、线性代数、数据结构、计算机网络、操作系统、数据库原理及应用等课程熟练使用 Microsoftoffice 办公软件",
//                "熟悉常见网络协议",
//                "精通 C语言",
//                "熟悉 javaweb",
//                "熟悉 C++",
//                "了解 linux 系统",
//                "了解常见网络安全技术",
//                "在校学过，C语言，C++，java，数据库，数据结构，linux操纵系统，安卓移动应用等等",
//                " Web开发：会使用Servlet+Jsp+MySql的mvc结构开发Web应用	 	 ",
//                " 前端框架：学过并有过Bootstrap/	Vue	/JQuery框架使用经验 	 ",
//                " 数据库相关：学过并有过MySQL/	SQL/	Mongo/	SQLite	数据库操作经验 	 ",
//                " 版本管理、文档和自动化部署工具：会应用Git 	 学过RESTful	API设计及应用 	 ",
//                " 操作系统：基于mac开发 "};
        //        String content = "程序员(英文Programmer)是从事程序开发、维护的专业人员。一般将程序员分为程序设计人员和程序编码人员，但两者的界限并不非常清楚，特别是在中国。软件从业人员分为初级程序员、高级程序员、系统分析员和项目经理四大类。";

        System.out.println(Integer.parseInt("你好"));

//        String[] re = {
//                "1-2万/月",
//                "2.5-3万/月",
//                "2.5-3万/月",
//                "1.5-2万/月",
//                "0.8-1.3万/月",
//                "0.8-1万/月",
//                "3-6千/月",
//                "1.5-2万/月",
//                "2-2.5万/月",
//                "0.8-1.3万/月"
//        };
//        List<String> keywordList = new ArrayList<String>(Arrays.asList(re));
//        int yi = 0,er = 0,san=0,other=0,si=0;
//        for (String wor:keywordList){
////            System.out.println(wor);
//            if (Float.parseFloat(wor.split("-")[0])<1)
//                yi++;
//            else if (Float.parseFloat(wor.split("-")[0])>=1&&Float.parseFloat(wor.split("-")[0])<2)
//                er++;
//            else if (Float.parseFloat(wor.split("-")[0])>=2&&Float.parseFloat(wor.split("-")[0])<3)
//                san++;
//            else if (Float.parseFloat(wor.split("-")[0])>=3&&Float.parseFloat(wor.split("-")[0])<4)
//                si++;
//            else{
//                other++;
//                System.out.println(wor);
//            }
//
//        }
//        System.out.println("一"+yi);
//        System.out.println("儿"+er);
//        System.out.println("三"+san);
//        System.out.println("si"+si);
//        System.out.println("其他"+other);

//        for (String content : contents) {
//            List<String> phraseList = HanLP.extractKeyword(content, 100);
////            System.out.println(keywordList);
////            System.out.println();
////            List<String> phraseList = HanLP.extractPhrase(content, 10);
//            keywordList.addAll(phraseList);
//            System.out.println(phraseList);
//
//        }
//        System.out.println("\n例子2 - 计算所有对象出现的次数");
//        Set<String> uniqueSet = new HashSet(keywordList);
//        for (String temp : uniqueSet) {
//            System.out.println("{\'name\':\"" + temp + "\"" + ", " + "\"value\":" + Collections.frequency(keywordList, temp) + "},");
//        }
//        for (String temp : uniqueSet) {
//            System.out.println("\'"+ temp+"\':" + Collections.frequency(keywordList, temp));
//        }
//        System.out.println("\n例子3 -用Map来计算对象出现的次数");
//        Map map = new HashMap();
//        for (String temp : list) {
//            Integer count = map.get(temp);
//            map.put(temp, (count == null) ? 1 : count + 1);
//        }
//        printMap(map);
//        System.out.println("\nMap排序-以key排序");
//        Map treeMap = new TreeMap(map);
//        printMap(treeMap);


//        for (int i = 0; i < arrayList.size() - 1; i++) {
//            for (int j = i + 1; j < arrayList.size(); j++) {
//                if (arrayList.get(i).equals(arrayList.get(j))) {
//                    arrayList.remove(j);
//                }
//            }
//        }


//        Simhash simhash = new Simhash(4, 3);
//        String content="        \n" +
//                "\n" +
//                "           生日：1999.08.16                现居：北京 \n" +
//                "\n" +
//                "             电话：186 4337 8179           邮箱：a1024172444@qq.com\n" +
//                "         求职意向：剧情策划实习生\n" +
//                "\n" +
//                "\n" +
//                "\n" +
//                "                  教育背景                                     \n" +
//                "\n" +
//                "        2017.09 - 2021.06            北京信息科技大学  \n" +
//                "\n" +
//                "        计算机科学与技术             c语言、数据结构、软件工程、c++、嵌入式、oracle、javaweb、计算机组成原\n" +
//                "                                     理等课程\n" +
//                "        本科\n" +
//                "\n" +
//                "                  校园     经历                                \n" +
//                "\n" +
//                "        2018年期间                   推理大师剧本                                      \n" +
//                "\n" +
//                "                                     《以纳普斯之名》—萝傀：锻炼了逻辑思维，在与小编沟通中多次修改剧本，与试玩\n" +
//                "\n" +
//                "                                     人员相处良好。在当时活动中获得剧本杀二等奖。1279人评价，评分8.6。\n" +
//                "\n" +
//                "                                       \n" +
//                "\n" +
//                "                                     广播剧改编                                      \n" +
//                "        2019 年暑期                 \n" +
//                "\n" +
//                "                                     通过校外兴趣社团参与了《浮光》广播剧的改编，全程参与了cv试音的工作，并在此\n" +
//                "\n" +
//                "                                     担任编剧一职，得到短篇小说原作者的认可。\n" +
//                "\n" +
//                "                  专业技能                                    8\n" +
//                "\n" +
//                "         1.  熟练掌握办公软件。\n" +
//                "\n" +
//                "         2.  熟悉数据库，有过oracle和mysql        的编程经历。\n" +
//                "\n" +
//                "         3.  简单了解python\n" +
//                "\n" +
//                "                  自我评价                                        \n" +
//                "\n" +
//                "        1.  具有良好的沟通能力，在两次写作相关的工作中与人员相处融洽，有很好的团队合作意识。对于自己的\n" +
//                "        工作能认真完成，有耐心，听取他人意见的同时也会有自己的想法，适应能力强。\n" +
//                "\n" +
//                "        2.  敢于创新，想象力丰富，具有很好的领导能力与逻辑思维，在学校组织的益智活动中起到了领导的作用。\n" +
//                "        对数据敏感，有较强的分析能力。\n" +
//                "\n" +
//                "        3.  兴趣爱好广泛，学习和接受新事物的速度很快，善于从各个资料中收集自己需要的部分，归纳整理，并\n" +
//                "        加入自己的理解。";
//        String content="统招本科\t3-5年\t语言不限\t年龄不限\t年终奖金\t五险一金\t发展空间大\t扁平管理\t技能培训\t带薪年假\t团队聚餐\t休闲餐点\t节日礼物\t定期体检\t职责描述：\t1.积极关注业务整体逻辑，关注业务组近期任务情况，若不清楚在合适的时候主动沟通；\t2.提前查看需求内容，积极参加产品需求宣讲，咨询业务逻辑问题，思考技术实现方式；\t3.积极参与概要设计，理解整体设计思路，整体任务要求，明确个人开发任务，相关配合人员等；\t4.概要设计同步会上，若存在设计问题，及时提出，互相交流设计优化方案，促进整体设计更完善；\t5.概要设计同步会后，按照要求和规范进行实现设计，主动确认实现疑问，主动发起实现设计评审；\t6.后端在进行实现设计的同时，负责完善接口文档，并及时提供模拟接口；\t7.概要设计同步会后，要求在半天最多1天内，完成实现设计、接口文档、模拟接口；\t8.按照排期要求和实现设计，高质量如期完成需求开发，若有异常情况，主动上报沟通解决；\t9.一边开发一边撰写，提测文档和上线文档，自测通过后，将上线文档交付运维部署测试环境。\t任职要求：\t1.扎实的计算机软件开发基础，和Java专业知识；\t2.熟练掌握并灵活运用spring/ioc/aop/mvc框架知识；\t3.熟练掌握并高性能使用mybatis/mysql/redis存储；\t4.思维敏捷/逻辑严谨/编码规范/对技术有很高的追求；\t5.有运用mq/rpc框架经验，了解soa服务治理优先；\t6.本科以上学历，3年以上工作经验\t\t\t\t\t\t注册时间：2019年10月\t注册资本：1000万人民币\t经营期限：2019年10月14日-2049年10月13日\t经营范围：软件开发；信息技术咨询、技术推广服务；通信设备制造、销售、租赁服务；互联网科技创新平台服务；互联网广告服务；互联网生活平台服务；企业管理咨询服务；数字广告开发、制作；食品、百货销售及互联网销售；从事经营性互联网文化活动、增值电信业务（按《增值电信业务经营许可证》所列项目经营）。（依法须经批准的项目，经相关部门批准后方可开展经营活动）许可项目：广播电视节目制作经营（依法须经批准的项目，经相关部门...\t\t\t\t查看更多\t\t请访问\t天眼查\t所属部门：\t\t专业要求：\t不限\t\t\t汇报对象：\tCTO\t\t\t下属人数：\t0人";
//        TFIDFAnalyzer tfidfAnalyzer = new TFIDFAnalyzer();

//        simhash
//        int topN=10000;
//        String filterContent = content.trim().replaceAll("\\p{Punct}|\\p{Space}", "");
//        TFIDFAnalyzer tfidfAnalyzer=new TFIDFAnalyzer();
//        List<Keyword> list=tfidfAnalyzer.analyze(filterContent,topN);
//        for(Keyword word:list)
//            System.out.println(word.getName()+":"+word.getTfidfvalue()+",");
        // 防拐:0.1992,幼儿园:0.1434,做好:0.1065,教育:0.0946,安全:0.0924

//        JiebaSegmenter segmenter = new JiebaSegmenter();
//        String[] sentences =
//                new String[]{"这是一个伸手不见五指的黑夜。我叫孙悟空，我爱北京，我爱Python和C++。", "我不喜欢日本和服。", "雷猴回归人间。",
//                        "工信处女干事每月经过下属科室都要亲口交代24口交换机等技术性器件的安装工作", "结果婚的和尚未结过婚的"};
//        for (String sentence : sentences) {
//            System.out.println(segmenter.process(sentence, JiebaSegmenter.SegMode.INDEX).toString());


//        int[] re2 = {22,31,21,28,32,28,26,28,23,29,26,23,30,21,31,26,30,22,25,25,27,25,31,29,26,25,31,30,28,32,21,32,27,27,30,25,30,27,23,30,34,24,29,29,34,27,29,22,25,22,25,34,30,27,33,29,31,27,18,30,27,30,23,34,28,25,29,25,28,30,30,36,32,30,23,30,36,25,27,27,32,29,30,32,27,26,31,34,24,29,21,23,28,30,27,24,30,21,26,31,32,31,29,26,30,28,30,36,25,29,30,29,22,33,27,26,34,32,29,37,25,35,35,31,30,25,35,24,24,26,37,40,33,39,32,29,30,35,31,34,26,32,41,43,32,27,43,26,31,32,23,30,26,29,25,29,33,31,24,26,21,28,29,28,24,27,31,27,30,30,28,26,30,30,23,26,26,29,25,31,34,35,32,26,29,24,35,28,30,33,25,27,32,30,29,30,30,23,24,25,30,31,29,28,32,32,26,20,23,31,32,31,26,29,29,30,28,20,31,29,25,21,29,33,30,27,29,34,30,28,35,36,25,31,26,23,28,31,39,28,28,28,33,35,28,27,35,30,27,28,28,35,27,28,28,32,32,26,21,27,24,23,32,29,31,28,26,20,23,29,29,31,29,35,26,29,25,30,32,32,23,28,25,23,30,25,32,35,31,32,36,30,27,23,30,31,23,18,27,28,30,29,29,24,38,26,28,28,25,23,28,31,22,27,27,28,26,30,29,23,35,31,29,25,26,27,39,30,32,24,27,30,31,29,28,29,26,31,25,24,24,26,25,27,34,25,27,30,29,32,21,24,22,33,29,31,29,25,30,34,33,26,29,24,40,27,29,25,30,30,22,30,24,22,29,30,30,19,29,31,28,29,26,34,25,32,31,34,32,27,33,29,24,28,31,26,28,25,30,29,32,33,25,32,30,30,30,38,29,37,18,29,28,27,33,26,32,24,23,35,31,31,35,33,32,35,29,36,34,36,35,36,31,31,30,35,30,31,39,36,34,30,39,37,36,31,37,32,27,34,29,28,36,23,31,39,29,33,26,30,29,26,23,26,24,31,29,31,30,36,26,34,24,24,27,26,28,33,29,27,28,27,34,30,29,26,27,34,30,35,25,29,24,30,35,28,30,25,34,27,25,28,26,27,29,27,25,33,22,26,31,26,27,30,30,25,29,29,32,38,26,38,26,20,21,28,34,27,25,31,30,35,26,30,27,30,29,30,26,27,29,23,32,30,27,28,30,27,30,27,29,30,28,31,29,41,35,31,24,30,27,26,23,28,32,29,29,29,24,32,24,26,32,28,31,26,26,31,25,35,34,31,34,32,23,24,39,32,30,33,33,35,34,32,35,30,32,25,32,29,26,25,29,30,28,34,30,28,25,33,28,29,24,25,31,32,24,24,29,31,31,31,29,29,32,29,31,28,24,32,33,32,31,29,26,27,30,29,27,26,32,34,35,33,30,29,33,28,25,30,32,27,25,28,34,32,28,34,25,31,32,27,26,29,33,28,30,26,21,27,33,29,37,33,26,29,33,30,34,34,33,34,29,33,30,31,36,29,33,30,34,32,33,35,34,29,35,36,27,36,32,29,29,26,32,34,28,34,21,27,32,27,26,29,29,30,26,24,21,29,27,27,31,29,20,23,27,26,24,34,35,38,23,31,28,29,40,29,27,32,28,34,35,37,28,29,37,20,21,28,31,30,30,31,33,35,35,33,22,32,25,32,25,30,28,27,25,33,28,26,34,32,36,28,27,32,38,27,31,29,26,29,32,34,31,28,35,28,26,33,25,29,34,34,35,30,34,27,24,29,29,28,32,29,27,39,37,35,34,28,29,34,29,32,32,29,25,31,28,28,36,34,34,28,31,32,28,33,33,35,30,27,30,30,35,30,37,30,26,33,33,39,32,34,35,34,34,27,26,27,35,34,40,33,29,29,31,43,36,32,29,36,29,32,34,29,33,29,30,36,36,40,40,32,35,28,38,29,29,33,40,37,34,40,35,34,27,32,34,31,25,37,36,42,35,30,42,33,30,37,28,31,27,32,28,30,32,40,29,31,24,29,26,27,35,30,24,30,25,33,29,35,37,31,32,31,31,26,30,34,35,32,31,29,28,29,30,33,29,36,32,28,35,35,34,33,35,32,27,34,30,39,31,28,30,34,30,40,23,23,30,29,24,29,31,34,32,24,27,27,29,35,31,27,26,23,35,26,26,28,33,34,31,29,36,33,30,31,25,30,24,30,33,35,24,29,35,26,29,22,36,31,29,26,34,34,32,40,27,31,30,25,28,29,29,28,36,32,25,37,31,33,35,27,28,27,33,32,32,32,31,30,31,31,32,31,34,33,31,34,34,28,31,31,40,31,31,28,33,34,33,28,28,25,35,31,29,37,30,20,27,28,25,30,34,23,31,37,26,26,28,34,34,28,27,28,32,27,33,29,28,31,26,38,35,34,33,34,30,27,29,35,32,30,33,30,30,29,28,35,26,29,25,26,30,26,30,38,35,27,24,29,26,25,35,34,30,36,29,31,31,35,37,31,36,29,29,30,32,30,33,38,35,33,32,31,30,35,29,38,32,28,39,35,40,33,35,38,33,34,29,28,24,27,23,27,31,33,26,22,17,28,33,30,30,19,23,25,28,28,34,32,34,28,29,28,28,31,29,33,26,27,28,28,27,26,27,20,26,27,27,27,34,28,31,32,28,25,18,27,29,32,32,37,27,33,29,31,24,34,33,32,31,34,34,29,33,29,26,38,24,38,36,28,27,26,34,27,29,35,34,39,26,38,33,26,33,28,32,35,31,31,32,38,37,36,38,29,30,33,27,28,32,31,19,29,35,33,30,34,27,34,27,22,30,31,21,29,28,26,28,26,32,28,27,26,32,31,19,25,32,31,26,24,33,20,29,24,28,33,29,29,30,30,27,32,30,29,22,23,36,35,35,32,34,38,34,38,29,33,30,31,30,29,33,26,30,34,25,35,35,33,29,27,32,31,29,40,30,32,37,30,29,31,30,35,32,29,35,34,32,34,29,33,30,35,33,28,31,34};
////
//        int[] re = {14, 20, 21, 21, 16, 20, 19, 25, 24, 36, 26, 23,
//                16, 31, 26, 19, 24, 20, 25, 20, 25, 27, 28, 23, 24, 22, 30,
//                19, 22, 26, 27, 30, 28, 24, 20, 21, 26, 25, 24, 26, 23, 27, 28, 32,
//                22, 19, 32, 24, 25, 23, 25, 21, 26, 24, 27, 27, 20, 26, 21, 29, 31,
//                16, 21, 26, 23, 28, 27, 19, 24, 21, 24, 24, 29, 26, 23, 21, 31, 22, 21,
//                23, 30, 31, 27, 29, 19, 32, 23, 26, 27, 19, 22, 24, 29, 31, 21, 18, 31,
//                19, 28, 22, 21, 21, 24, 24, 21, 25, 22, 26, 21, 35, 31, 22, 17, 32, 25,
//                28, 31, 21, 26, 25, 26, 26, 37, 28, 21, 25, 37, 24, 23, 25, 30, 37, 29, 33, 23, 28, 27, 24, 29, 25, 24, 28, 33, 37, 25, 22, 37, 25, 26, 28, 19, 23, 26, 18, 21, 23, 22, 24, 21, 31, 27, 24, 19, 28, 27, 22, 27, 19, 28, 21, 28, 26, 29, 32, 31, 21, 33, 22, 21, 29, 28, 31, 29, 23, 21, 26, 29, 24, 29, 23, 24, 30, 29, 33, 19, 18, 33, 19, 26, 20, 24,
//                22, 21, 25, 22, 24, 23, 29, 22, 38, 32, 27, 20, 35, 30, 27, 28, 22, 29, 22, 31, 33, 30, 27, 28, 30, 30, 27, 28, 26, 31, 32, 34, 30, 22, 27, 30, 29, 30, 28, 23, 31, 26, 32, 28, 23, 32, 26, 35, 29, 24, 18, 25, 21, 22,
//                22, 17, 19, 18, 26, 30, 21, 18, 25, 24, 25, 18, 18, 23, 20, 25, 21, 36, 25, 26, 22, 34, 21, 14, 24, 31, 34, 24, 26, 20, 31, 24, 25, 26, 18, 25, 25, 34, 38, 20, 17, 38, 18, 27, 21, 21, 17, 24, 22, 17, 21, 24, 22, 25, 25, 29, 22, 21, 22, 23, 26, 21, 19, 26, 21, 26, 22, 29, 24, 29, 25, 33, 22, 15, 21, 28, 31, 27, 21, 17, 30, 19, 22, 27, 19, 28, 24, 27, 27, 19,
//                16, 27, 17, 26, 20, 27, 25, 24, 28, 25, 27, 26, 28, 29, 39, 35, 32, 21, 36, 33, 26, 27, 27, 30, 25, 30, 32, 31, 28, 33, 33, 27, 32, 29, 31, 36, 31, 29, 29, 23, 28, 35, 32, 31, 31, 30, 34, 29, 31, 29, 28, 31, 27, 36, 26, 23, 19, 22, 22, 23, 19, 22, 16, 19, 25, 23, 20, 19, 20, 21, 16, 19, 23, 18, 21, 24, 22, 35, 26, 21, 21, 31, 20, 17, 25, 24, 35, 25, 31, 19, 28, 23, 22, 21, 17, 26, 28, 33, 37, 21, 22, 37, 23, 22, 20, 20, 24, 23, 25, 20, 26, 23, 29, 26, 38, 36, 23, 16, 35, 32, 27, 28, 22, 29, 24, 31, 31, 28, 27, 28, 28, 36, 25, 26, 24, 35, 34, 32, 26, 22, 29, 30, 25, 28, 26, 27, 31, 28, 32, 26, 23, 32, 26, 31, 27, 24, 22, 21, 31, 24, 26, 27, 33, 26, 34, 32, 25, 26, 33, 32, 31, 28, 22, 29, 30, 31, 31, 30, 25, 28, 32, 30, 27, 26, 22, 33, 30, 34, 26, 24, 29, 28, 23, 28, 28, 29, 27, 24, 28, 28, 25, 28, 30, 29, 29, 23, 23, 30, 18, 21, 23, 22, 24, 21, 31, 29, 22, 15, 28, 27, 22, 27, 21, 28, 19, 28, 24, 31, 34, 31, 23, 35, 24, 19, 29, 30, 37, 27, 27, 19, 26, 29, 26, 29, 23, 24, 32, 31, 33, 19, 16, 33, 19, 28, 20, 21, 21, 26, 24, 21, 21, 24, 26, 21, 35, 27, 26, 23, 30, 27, 26, 29, 21, 26, 21, 30, 30, 29, 32, 27, 25, 27, 24, 25, 25, 30, 31, 33, 25, 21, 24, 29, 26, 31, 25, 24, 30, 27, 31, 23, 20, 31, 23, 30, 26, 27, 31, 24, 30, 33, 31, 28, 34, 29, 41, 37, 34, 25, 38, 39, 28, 37, 29, 32, 27, 34, 34, 29, 30, 35, 31, 37, 30, 35, 33, 34, 35, 37, 35, 29, 34, 39, 36, 29, 31, 30, 34, 29, 35, 33, 28, 35, 33, 36, 32, 24, 26, 23, 27, 20, 26, 25, 29, 24, 32, 28, 27, 24, 31, 30, 23, 22, 24, 27, 26, 23, 35, 26, 27, 30, 24, 30, 25, 24, 26, 27, 34, 28, 22, 24, 27, 30, 23, 24, 30, 29, 27, 28, 28, 24, 25, 28, 18, 23, 23, 25, 25, 28, 30, 29, 29, 24, 26, 21, 27, 27, 26, 31, 26, 25, 24, 29, 27, 26, 25, 26, 30, 29, 30, 31, 23, 31, 28, 23, 27, 30, 31, 31, 27, 27, 28, 31, 30, 29, 25, 28, 28, 25, 29, 23, 24, 29, 27, 28, 26, 28, 22, 27, 21, 26, 26, 21, 25, 20, 36, 32, 23, 22, 33, 30, 23, 30, 22, 29, 22, 27, 27, 34, 27, 26, 26, 30, 25, 22, 24, 29, 28, 28, 26, 24, 25, 28, 27, 24, 26, 21, 31, 28, 32, 28, 21, 32, 20, 27, 21, 22, 28, 35, 29, 30, 34, 23, 29, 22, 30, 26, 23, 26, 29, 30, 23, 30, 22, 21, 26, 23, 33, 30, 31, 30, 20, 38, 23, 26, 28, 27, 38, 30, 32, 28, 25, 30, 25, 24, 26, 29, 29, 30, 34, 22, 27, 34, 24, 23, 27, 21, 17, 18, 22, 23, 19, 24, 18, 19, 29, 25, 20, 21, 24, 23, 20, 21, 21, 20, 21, 24, 24, 35, 22, 21, 25, 33, 20, 19, 23, 24, 35, 31, 31, 19, 28, 25, 22, 23, 19, 28, 28, 31, 37, 25, 22, 37, 25, 26, 24, 24, 22, 23, 25, 20, 24, 23, 29, 26, 40, 34, 27, 20, 35, 32, 27, 28, 26, 31, 22, 31, 31, 32, 29, 32, 28, 32, 23, 26, 30, 33, 34, 34, 26, 24, 29, 32, 25, 30, 28, 25, 33, 32, 32, 26, 23, 32, 24, 33, 25, 26, 28, 27, 25, 26, 32, 25, 29, 24, 30, 30, 21, 20, 29, 28, 27, 30, 26, 21, 26, 21, 27, 38, 29, 30, 22, 34, 27, 24, 28, 33, 34, 26, 28, 28, 33, 28, 29, 28, 28, 33, 29, 34, 32, 24, 25, 32, 26, 27, 29, 24, 22, 27, 31, 28, 32, 31, 29, 28, 34, 28, 31, 26, 33, 30, 25, 30, 28, 29, 30, 29, 29, 32, 23, 30, 28, 40, 27, 24, 28, 31, 34, 36, 36, 26, 31, 30, 31, 28, 30, 37, 35, 30, 34, 28, 27, 34, 26, 27, 33, 26, 24, 21, 27, 30, 24, 27, 25, 24, 26, 26, 31, 26, 25, 26, 25, 20, 26, 23, 28, 25, 31, 34, 25, 26, 24, 32, 21, 22, 28, 25, 38, 28, 32, 24, 27, 22, 19, 26, 24, 35, 25, 38, 36, 24, 27, 36, 24, 19, 23, 18, 14, 21, 21, 16, 18, 17, 23, 18, 32, 26, 21, 18, 29, 28, 21, 24, 18, 25, 18, 23, 23, 30, 25, 28, 20, 32, 17, 18, 22, 23, 32, 30, 26, 22, 23, 26, 19, 22, 22, 23, 27, 26, 32, 24, 17, 32, 20, 23, 19, 24, 22, 29, 29, 20, 24, 25, 31, 22, 30, 26, 27, 20, 29, 30, 27, 32, 24, 25, 24, 27, 31, 32, 33, 34, 24, 32, 27, 26, 30, 29, 38, 30, 32, 26, 25, 24, 25, 30, 26, 25, 27, 36, 36, 24, 19, 36, 24, 25, 27, 16, 20, 21, 13, 20, 14, 21, 23, 20, 30, 26, 17, 16, 25, 22, 23, 24, 16, 21, 16, 23, 19, 30, 27, 22, 22, 28, 19, 18, 22, 25, 32, 22, 24, 12, 25, 24, 21, 24, 20, 21, 23, 26, 30, 16, 15, 30, 22, 25, 17, 27, 21, 20, 24, 21, 27, 26, 28, 25, 39, 31, 28, 21, 36, 27, 24, 29, 27, 30, 23, 28, 30, 29, 30, 31, 33, 29, 30, 29, 29, 32, 31, 31, 29, 23, 26, 35, 32, 29, 31, 28, 34, 31, 31, 29, 26, 31, 27, 38, 28};
//        for (int j = 0; j <= 27; j++) {
//            int sum = 0;
//            int[] temp = new int[50];
//            for (int i = 0; i < 50; i++) {
//                temp[i] = re2[j*50+i];
//                sum += temp[i];
//            }
//            for (int s:temp){
//                System.out.print(s+" ");
//            }
//            Arrays.sort(temp);
//            System.out.println();
//            for (int s:temp){
//                System.out.print(s+" ");
//            }
//            System.out.println(temp.length);
//            int mid = (temp[50 / 2] + temp[50 / 2 + 1]) / 2;
//            System.out.println("中位数是：" + mid);
//            System.out.println("平均数是：" + sum / 50);
////            break;
//        }
//        }
    }
//    public static void printMap(Map map) {
//        for (Map.Entry entry : map.entrySet()) {
//            System.out.println("Key-value : " + entry.getKey() + "- "
//                    + entry.getValue());
//        }
//    }
}
